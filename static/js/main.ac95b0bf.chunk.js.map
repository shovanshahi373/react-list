{"version":3,"sources":["components/todo.js","components/overlay.js","components/todolist.js","App.js","index.js"],"names":["Todo","item","name","id","toggleOverLay","Button","styled","button","style","display","justifyContent","alignItems","marginTop","borderBottom","padding","onClick","bind","Overlay","deleteTodo","overlay","Section","section","Mesg","div","color","this","Todolist","list","length","map","key","letterSpacing","LOCAL_STORAGE_KEY","ReactDOM","render","useState","todo","setTodo","setList","useEffect","harvestedList","localStorage","getItem","JSON","parse","setItem","stringify","type","placeholder","onChange","e","console","log","target","value","onKeyPress","charCode","newList","uuid","preventDefault","width","border","borderRadius","margin","textAlign","delItem","filter","a","find","newlist","splice","indexOf","document","getElementById"],"mappings":"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","file":"static/js/main.ac95b0bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Todo = ({ item: { name, id }, toggleOverLay }) => {\r\n  const Button = styled.button`\r\n    background-color: hsla(314, 35%, 50%, 1);\r\n    color: white;\r\n    border: none;\r\n    margin-left: 20px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    transition: 0.4s background-color;\r\n    &:hover {\r\n      background-color: hsl(314, 35%, 50%, 0.6);\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3px\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          padding: \"10px 0\"\r\n        }}\r\n      >\r\n        name: {name}\r\n        <Button onClick={toggleOverLay.bind(this, id)}>delete</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Overlay({\r\n  deleteTodo,\r\n  item: { name, overlay, id },\r\n  toggleOverLay\r\n}) {\r\n  const Button = styled.button`\r\n    background-color: hsla(314, 35%, 50%, 1);\r\n    color: white;\r\n    border: none;\r\n    margin-left: 20px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    transition: 0.4s background-color;\r\n    &:hover {\r\n      background-color: hsl(314, 35%, 50%, 0.6);\r\n    }\r\n  `;\r\n\r\n  const Section = styled.section`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: hsla(10, 100%, 0%, 0.9);\r\n    color: black;\r\n    display: ${() => (overlay ? \"block\" : \"none\")};\r\n  `;\r\n\r\n  const Mesg = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: whitesmoke;\r\n    padding: 10px 20px;\r\n    border-radius: 3px;\r\n    width: 30%;\r\n  `;\r\n  return (\r\n    <Section>\r\n      <Mesg>\r\n        <small\r\n          style={{\r\n            color: \"#ccc\"\r\n          }}\r\n        >\r\n          {id}\r\n        </small>\r\n        <p>\r\n          The selected todo named \"<b>{name}\"</b> will be deleted. Are you sure?\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Button onClick={deleteTodo}>yes</Button>\r\n          <Button onClick={toggleOverLay.bind(this, id)}>no</Button>\r\n        </div>\r\n      </Mesg>\r\n    </Section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./todo\";\r\nimport Overlay from \"./overlay\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Todolist = ({ list, deleteTodo, toggleOverLay }) => {\r\n  if (list.length > 0) {\r\n    return list.map(item => (\r\n      <>\r\n        <Todo item={item} key={item.id} toggleOverLay={toggleOverLay} />\r\n        <Overlay\r\n          item={item}\r\n          toggleOverLay={toggleOverLay}\r\n          deleteTodo={deleteTodo.bind(this, item.id)}\r\n        />\r\n      </>\r\n    ));\r\n  } else {\r\n    return (\r\n      <p\r\n        style={{\r\n          color: \"#ccc\",\r\n          letterSpacing: \"4px\"\r\n        }}\r\n      >\r\n        nothing to show...\r\n      </p>\r\n    );\r\n  }\r\n};\r\n\r\nTodolist.propTypes = {\r\n  list: PropTypes.array\r\n};\r\n\r\nexport default Todolist;\r\n","import React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/todolist\";\nimport uuid from \"uuidv4\";\n\nconst LOCAL_STORAGE_KEY = \"LISTS\";\n\nexport default function App() {\n  const [todo, setTodo] = useState(\"\");\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const harvestedList = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (harvestedList) setList(JSON.parse(harvestedList));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(list));\n  }, [list]);\n  const handleChange = e => {\n    console.log(\"run\");\n    setTodo(e.target.value);\n  };\n  const handlesubmitonenter = e => {\n    if (e.charCode === 13) {\n      const newList = [...list, { name: todo, id: uuid(), overlay: false }];\n      setList(newList);\n      setTodo(\"\");\n    }\n  };\n  const handleSubmit = e => {\n    console.log(e);\n    e.preventDefault();\n    if (!todo) return;\n    const newList = [...list, { name: todo, id: uuid(), overlay: false }];\n    setList(newList);\n    setTodo(\"\");\n  };\n  const deleteTodo = id => {\n    const delItem = list.filter(item => item.id !== id);\n    setList(delItem);\n    console.log(delItem);\n  };\n  const toggleOverLay = id => {\n    const a = list.find(item => item.id === id);\n    a.overlay = !a.overlay;\n    const newlist = [...list];\n    newlist.splice(list.indexOf(a), 1, a);\n    console.log(a);\n    setList(newlist);\n  };\n  return (\n    <>\n      <input\n        type='text'\n        placeholder='enter a todo...'\n        onChange={handleChange}\n        onKeyPress={handlesubmitonenter}\n        value={todo}\n      />\n      <button onClick={handleSubmit}>Add Todo</button>\n      <div\n        style={{\n          width: \"40%\",\n          border: \"4px solid yellow\",\n          borderRadius: \"10px\",\n          padding: \"30px\",\n          margin: \"auto\"\n        }}\n      >\n        <h1\n          style={{\n            textAlign: \"center\"\n          }}\n        >\n          TO DO LIST\n        </h1>\n        <TodoList\n          list={list}\n          deleteTodo={deleteTodo}\n          toggleOverLay={toggleOverLay}\n        />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}